# Build and Publish Pipeline

environment:
  matrix:
  # Use Ubuntu to build and test the netstandard2.0 target framework on Linux
  - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
    SOLUTION: 'OpenXmlPowerTools.sln'
    CONFIGURATION: 'Release'
    PROJECT_LOAD_STYLE: 'netstandard2_0'
  # Use Visual Studio 2019 on Windows to build, test, and pack all target frameworks
  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    SOLUTION: 'OpenXmlPowerTools.sln'
    CONFIGURATION: 'Release'
    PROJECT_LOAD_STYLE: 'All'

matrix:
  fast_finish: true

install:
- pwsh: dotnet tool install --global GitVersion.Tool --version 5.*

before_build:
- pwsh: dotnet-gitversion /l console /config GitVersion.yml /output buildserver /updateprojectfiles

build_script:
- pwsh: |
    # Fail the build in case the script produces non-terminating errors
    $ErrorActionPreference = "Stop"

    dotnet build $env:SOLUTION --configfile NuGet.config -c $env:CONFIGURATION -p:ProjectLoadStyle=$env:PROJECT_LOAD_STYLE

    if ($isWindows)
    {
      dotnet pack $env:SOLUTION `
        --no-build `
        -c $env:CONFIGURATION `
        -p:ProjectLoadStyle=$env:PROJECT_LOAD_STYLE `
        -p:IncludeSymbols=true `
        -p:SymbolPackageFormat=snupkg `
        -o .\nupkgs
    }

#test_script:
- pwsh: dotnet test $env:SOLUTION --no-build -c $env:CONFIGURATION -p:ProjectLoadStyle=$env:PROJECT_LOAD_STYLE

test: off

for:
- # Windows image
  matrix:
    only:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019

  artifacts:
  - path: '.\nupkgs\*.nupkg'
    name: 'NuGet Packages'
  - path: '.\nupkgs\*.snupkg'
    name: 'Symbol Packages'

  # The following should be moved to a deployment stage that we can trigger manually.
  #deploy_script:
  #- pwsh: |
  #    # Push NuGet packages
  #    dotnet nuget push .\nupkgs\* `
  #      --source $env:accountNuGetServer `
  #      --api-key $env:accountNuGetApiKey `
  #      --symbol-source $env:accountSymbolServer `
  #      --symbol-api-key $env:accountSymbolApiKey
